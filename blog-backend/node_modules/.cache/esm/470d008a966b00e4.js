let Koa,Router,bodyParser,mongoose,api,createFakeData,jwtMiddleware;_966‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_966‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_966‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_966‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_966‍.w("./api",[["default",["api"],function(v){api=v}]]);_966‍.w("./createFakeData",[["default",["createFakeData"],function(v){createFakeData=v}]]);_966‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);require('dotenv').config();









const app = new Koa();
const router = new Router();

const {PORT, MONGO_URI} = process.env;

mongoose
    .connect(MONGO_URI)
    .then(() => {
        console.log('Connected to MongoDB');
        // createFakeData();
    })
    .catch(e => {
        _966‍.g.console.error(e);
    });

_966‍.g.console.log("PORT=>", PORT);
console.log()

router.use('/api', api.routes());

app.use(bodyParser());
app.use(jwtMiddleware);

app.use(router.routes()).use(router.allowedMethods());

const port = PORT || 4000;

app.listen(port, () => {
    _966‍.g.console.log('Listening to port %d', port);
});